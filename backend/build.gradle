buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:9.16.3'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.flywaydb.flyway' version "9.16.3"
}

group = 'com.digginroom'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //auth
    implementation 'com.auth0:java-jwt:3.19.0'
    implementation 'com.auth0:jwks-rsa:0.21.1'

    // flyway
    implementation 'org.flywaydb:flyway-core:9.16.3'
    implementation 'org.flywaydb:flyway-mysql:9.16.3'

    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.springdoc:springdoc-openapi-starter-common:2.2.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.rest-assured:rest-assured'
}

/**
 * 서버를 띄우지 않고 flyway 스크립트만 실행하고 싶은 경우 아래 방법을 통해 실행할 수 있다.
 *
 * 최초로 실행하는 경우 또는 첫 버전 스크립트부터 모두 실행하고 싶은 경우 아래 스크립트를 실행한다.
 * 데이터가 초기화되므로 주의해야 한다.
 * ./gradlew flywayClean flywayBaseline flywayMigrate
 *
 * 이전 버전에서 마이그레이션만 원하는 경우
 * ./gradlew flywayMigrate
 */
flyway {
    url = "jdbc:mysql://localhost:13306/test"
    user = "root"
    password = "root"
    locations = ["filesystem:${file("src/main/resources/db/migration").absolutePath}"]
    encoding = "UTF-8"
    cleanDisabled = false
    outOfOrder = true // 여러브랜치에서 서로 다른 날짜로 만들어도 작동하도록
    validateOnMigrate = true
    baselineVersion = 0 // V0 스크립트는 이미 실행한 것으로 기준선을 잡는다.
}

tasks.named('test') {
    useJUnitPlatform()
}
